"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const c=require("effect"),_=require("@octokit/rest");class v{constructor(r){var i;this.octokit=new _.Octokit({auth:(i=r.auth)==null?void 0:i.token,baseUrl:r.baseUrl,...r.options})}getRepository(r,i){return c.Effect.tryPromise({try:async()=>{const{data:a}=await this.octokit.rest.repos.get({owner:r,repo:i});return{id:a.id.toString(),name:a.name,fullName:a.full_name,description:a.description||void 0,defaultBranch:a.default_branch,isPrivate:a.private,url:a.html_url,cloneUrl:a.clone_url,createdAt:new Date(a.created_at),updatedAt:new Date(a.updated_at)}},catch:a=>new Error(`Failed to get repository: ${a}`)})}listRepositories(r){return c.Effect.tryPromise({try:async()=>{const{data:i}=r?await this.octokit.rest.repos.listForUser({username:r}):await this.octokit.rest.repos.listForAuthenticatedUser();return i.map(a=>({id:a.id.toString(),name:a.name,fullName:a.full_name,description:a.description||void 0,defaultBranch:a.default_branch||"main",isPrivate:a.private,url:a.html_url,cloneUrl:a.clone_url||"",createdAt:new Date(a.created_at||""),updatedAt:new Date(a.updated_at||"")}))},catch:i=>new Error(`Failed to list repositories: ${i}`)})}getPullRequest(r,i,a){return c.Effect.tryPromise({try:async()=>{var e,o,s,n,l;const{data:t}=await this.octokit.rest.pulls.get({owner:r,repo:i,pull_number:a});return{id:t.id.toString(),number:t.number,title:t.title,description:t.body||void 0,state:t.state,sourceBranch:t.head.ref,targetBranch:t.base.ref,author:{id:((e=t.user)==null?void 0:e.id.toString())||"",username:((o=t.user)==null?void 0:o.login)||"",displayName:((s=t.user)==null?void 0:s.name)||void 0,email:((n=t.user)==null?void 0:n.email)||void 0,avatarUrl:((l=t.user)==null?void 0:l.avatar_url)||void 0},createdAt:new Date(t.created_at),updatedAt:new Date(t.updated_at),url:t.html_url}},catch:t=>new Error(`Failed to get pull request: ${t}`)})}listPullRequests(r,i,a="open"){return c.Effect.tryPromise({try:async()=>{const{data:t}=await this.octokit.rest.pulls.list({owner:r,repo:i,state:a});return t.map(e=>{var o,s,n,l,d;return{id:e.id.toString(),number:e.number,title:e.title,description:e.body||void 0,state:e.state,sourceBranch:e.head.ref,targetBranch:e.base.ref,author:{id:((o=e.user)==null?void 0:o.id.toString())||"",username:((s=e.user)==null?void 0:s.login)||"",displayName:((n=e.user)==null?void 0:n.name)||void 0,email:((l=e.user)==null?void 0:l.email)||void 0,avatarUrl:((d=e.user)==null?void 0:d.avatar_url)||void 0},createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),url:e.html_url}})},catch:t=>new Error(`Failed to list pull requests: ${t}`)})}getFile(r,i,a,t){return c.Effect.tryPromise({try:async()=>{const{data:e}=await this.octokit.rest.repos.getContent({owner:r,repo:i,path:a,ref:t});if(Array.isArray(e))throw new Error("Path is a directory, not a file");if(e.type!=="file")throw new Error("Path is not a file");return{path:e.path,name:e.name,type:"file",size:e.size,content:e.content?globalThis.Buffer.from(e.content,"base64").toString():void 0,sha:e.sha}},catch:e=>new Error(`Failed to get file: ${e}`)})}listFiles(r,i,a="",t){return c.Effect.tryPromise({try:async()=>{const{data:e}=await this.octokit.rest.repos.getContent({owner:r,repo:i,path:a,ref:t});return Array.isArray(e)?e.map(o=>({path:o.path,name:o.name,type:o.type==="dir"?"directory":"file",size:o.size,sha:o.sha})):[e].map(o=>({path:o.path,name:o.name,type:o.type==="dir"?"directory":"file",size:o.size,sha:o.sha}))},catch:e=>new Error(`Failed to list files: ${e}`)})}getBranch(r,i,a){return c.Effect.tryPromise({try:async()=>{const{data:t}=await this.octokit.rest.repos.getBranch({owner:r,repo:i,branch:a});return{name:t.name,sha:t.commit.sha,isDefault:!1,isProtected:t.protected}},catch:t=>new Error(`Failed to get branch: ${t}`)})}listBranches(r,i){return c.Effect.tryPromise({try:async()=>{const{data:a}=await this.octokit.rest.repos.listBranches({owner:r,repo:i});return a.map(t=>({name:t.name,sha:t.commit.sha,isDefault:!1,isProtected:t.protected}))},catch:a=>new Error(`Failed to list branches: ${a}`)})}getCommit(r,i,a){return c.Effect.tryPromise({try:async()=>{var e,o,s,n,l,d,u,m,h,y,f;const{data:t}=await this.octokit.rest.repos.getCommit({owner:r,repo:i,ref:a});return{sha:t.sha,message:t.commit.message,author:{id:((e=t.author)==null?void 0:e.id.toString())||"",username:((o=t.author)==null?void 0:o.login)||"",displayName:((s=t.commit.author)==null?void 0:s.name)||void 0,email:((n=t.commit.author)==null?void 0:n.email)||void 0,avatarUrl:((l=t.author)==null?void 0:l.avatar_url)||void 0},committer:{id:((d=t.committer)==null?void 0:d.id.toString())||"",username:((u=t.committer)==null?void 0:u.login)||"",displayName:((m=t.commit.committer)==null?void 0:m.name)||void 0,email:((h=t.commit.committer)==null?void 0:h.email)||void 0,avatarUrl:((y=t.committer)==null?void 0:y.avatar_url)||void 0},createdAt:new Date(((f=t.commit.author)==null?void 0:f.date)||""),url:t.html_url,parents:t.parents.map(p=>p.sha)}},catch:t=>new Error(`Failed to get commit: ${t}`)})}listCommits(r,i,a){return c.Effect.tryPromise({try:async()=>{const{data:t}=await this.octokit.rest.repos.listCommits({owner:r,repo:i,sha:a});return t.map(e=>{var o,s,n,l,d,u,m,h,y,f,p;return{sha:e.sha,message:e.commit.message,author:{id:((o=e.author)==null?void 0:o.id.toString())||"",username:((s=e.author)==null?void 0:s.login)||"",displayName:((n=e.commit.author)==null?void 0:n.name)||void 0,email:((l=e.commit.author)==null?void 0:l.email)||void 0,avatarUrl:((d=e.author)==null?void 0:d.avatar_url)||void 0},committer:{id:((u=e.committer)==null?void 0:u.id.toString())||"",username:((m=e.committer)==null?void 0:m.login)||"",displayName:((h=e.commit.committer)==null?void 0:h.name)||void 0,email:((y=e.commit.committer)==null?void 0:y.email)||void 0,avatarUrl:((f=e.committer)==null?void 0:f.avatar_url)||void 0},createdAt:new Date(((p=e.commit.author)==null?void 0:p.date)||""),url:e.html_url,parents:e.parents.map(w=>w.sha)}})},catch:t=>new Error(`Failed to list commits: ${t}`)})}}const E={name:"octokit",provider:"github",createClient:g=>c.Effect.succeed(new v(g))};exports.OctokitClient=v;exports.octokitPlugin=E;
