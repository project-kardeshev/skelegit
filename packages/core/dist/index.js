"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("effect");class r{constructor(){this.plugins=new Map}registerPlugin(t){return e.Effect.sync(()=>{this.plugins.set(t.provider,t)})}getPlugin(t){return e.Effect.sync(()=>{const n=this.plugins.get(t);if(!n)throw new Error(`Plugin not found for provider: ${t}`);return n})}createClient(t){return e.Effect.flatMap(this.getPlugin(t.provider),n=>n.createClient(t))}listPlugins(){return e.Effect.sync(()=>Array.from(this.plugins.values()))}}const c=new r;function f(i){return c.createClient(i)}class o{constructor(){this.clients=new Map}addClient(t,n){return e.Effect.sync(()=>{this.clients.set(t,n)})}getClient(t){return e.Effect.sync(()=>{const n=this.clients.get(t);if(!n)throw new Error(`Client not found: ${t}`);return n})}removeClient(t){return e.Effect.sync(()=>this.clients.delete(t))}listClients(){return e.Effect.sync(()=>Array.from(this.clients.keys()))}}class s{constructor(t){this.config=t}getConfig(){return e.Effect.succeed(this.config)}getClientConfig(t){return e.Effect.sync(()=>{const n=this.config.clients[t];if(!n)throw new Error(`Client configuration not found: ${t}`);return n})}getDefaultClientConfig(){return e.Effect.sync(()=>{if(!this.config.defaultClient)throw new Error("No default client configured");return this.getClientConfig(this.config.defaultClient)}).pipe(e.Effect.flatten)}updateConfig(t){return e.Effect.sync(()=>{this.config={...this.config,...t}})}}function l(i){return new s(i)}exports.ConfigManager=s;exports.GitClientManager=o;exports.PluginSystem=r;exports.createConfigManager=l;exports.createGitClient=f;exports.pluginSystem=c;
